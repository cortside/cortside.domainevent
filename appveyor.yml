## https://www.appveyor.com/docs/appveyor-yml/
image: Visual Studio 2019

version: 1.1.{build}

configuration:
- Debug

platform: Any CPU

pull_requests:  
  do_not_increment_build_number: true

environment:
  # Don't report back to the mothership
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  JAVA_HOME: C:\Program Files\Java\jdk15
  SONAR_TOKEN:
    secure: fNmV/P8zSNwd3LWpzw2nnm807oe1Hr0gr11hTItGCXmnVQ0tHN1ESPUjLYjsXmpG
  SONAR_PROJECT: cortside_cortside.domainevent

init:
- ps: $Env:LABEL = "CI" + $Env:APPVEYOR_BUILD_NUMBER.PadLeft(5, "0")
- ps: Get-ChildItem "Env:"

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

before_build:
- appveyor-retry dotnet restore src -v Minimal
- set DNX_BUILD_VERSION=%APPVEYOR_BUILD_NUMBER%
- dotnet --info

build:
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true 
  include_nuget_references: true
  verbosity: minimal

build_script:
- ps: >-
    $version = $env:APPVEYOR_BUILD_VERSION;
    if (-not (Test-Path env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH)) {
        $branch = $Env:APPVEYOR_REPO_BRANCH;
        $target = "develop";
        if ($branch -eq "develop" -or $branch -like "release/*" ) {
            $target = "master";
        }
        if ($branch -eq "master") {
            $target = "";
        }
    } else {
        $branch = $Env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH;
        $target = $Env:APPVEYOR_REPO_BRANCH;
    }
    $sonarProject = $Env:SONAR_PROJECT;
    $sonarToken = $Env:SONAR_TOKEN;
    $configuration = $Env:Configuration;
    dotnet tool install --global dotnet-sonarscanner;
    dotnet sonarscanner begin /o:"cortside" /k:"$sonarProject" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$sonarToken" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.branch.name="$branch" $target;
    dotnet build src --no-restore --configuration $configuration /property:Version=$version;
    dotnet test src --no-restore --no-build --collect:"XPlat Code Coverage" --settings ./src/coverlet.runsettings.xml /p:CollectCoverage=true /p:CoverletOutputFormat=opencover;
    dotnet sonarscanner end /d:sonar.login="$sonarToken";

after_build:
- ps: >-
    $branch = $ENV:APPVEYOR_REPO_BRANCH;
    $fileVersion = $env:APPVEYOR_BUILD_VERSION;
    if($branch -ne 'master') {
        $fileVersion = "${fileVersion}-${branch}"; 
    }   
    dotnet pack src --include-symbols -p:SymbolPackageFormat=snupkg --configuration $env:configuration -o ((get-location).Path + '\artifacts') /property:Version=$fileVersion 
    
artifacts:
- path: artifacts\**\*.*

cache:
- '%USERPROFILE%\.nuget\packages'
  
nuget:
  disable_publish_on_pr: true
#  account_feed: true
#  project_feed: true
  
deploy:
- provider: NuGet
  api_key:
    secure: NK6JEky2i7+06Ij+PlJX7X0xlKT4fg2zDIFP5fiFSy6EqxcIYThFBkzzqpQTUnsO
